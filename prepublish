#!/bin/bash

# alternative shape files with admin_0_sovereignty states separated out
# https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_0_sovereignty.zip

# alternative shape files with admin_0 map units separated out
# https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_0_map_units.zip

fetch_shp() {
  echo
  echo "-----------------------------------------------------------------------"
  echo "Fetching $2 data from Natural Earth at 1:$1 scale"
  echo "-----------------------------------------------------------------------"
  echo

  curl -z build/ne_$1_admin_0_$2.zip -o build/ne_$1_admin_0_$2.zip http://naciscdn.org/naturalearth/$1/cultural/ne_$1_admin_0_$2.zip
  unzip -od build build/ne_$1_admin_0_$2.zip
  chmod a-x build/ne_$1_admin_0_$2.*
}

make_world_topo() {
  echo "-----------------------------------------------------------------------"
  echo "Building world topology -- world/world$1.json"
  echo "-----------------------------------------------------------------------"
  echo

  # delete d.properties,
  # d.properties = { name: d.properties.name },

  geo2topo -q 1e5 -n countries=<( \
    shp2json -n build/ne_$1_admin_0_$2.shp \
    | ndjson-map 'd.id = d.properties.iso_A2, d' \
    | geostitch -n) \
    | topomerge land=countries \
    | toposimplify -S $3 \
    > world/world$1.json
}

link_geonames() {
  echo "-----------------------------------------------------------------------"
  echo "Linking country metadata to geonames records -- world/world$1.json"
  echo "-----------------------------------------------------------------------"
  echo

  TARGET_FILE="world/world$1.json" \
  LOG_LEVEL=$2 \
  node scripts/link_geonames.js
}

world() {
  # fetch_shp $1 $2
  make_world_topo $1 $2 $3
  link_geonames $1 $4
}

# rm -rvf world

mkdir -p build
mkdir -p world

world 110m map_units 1.0
world 50m map_units 0.25
world 10m map_units 0.25 DEBUG

#!/bin/bash

# alternative shape files with admin_0 map units separated out
# https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_0_map_units.zip

# admin 1 states / provinces / etc
# https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_1_states_provinces.zip

fetch_natural_earth_data() {
  echo
  echo "-----------------------------------------------------------------------"
  echo "Fetching $2 data from Natural Earth at 1:$1 scale"
  echo "-----------------------------------------------------------------------"
  echo

  curl -z build/ne_$1_$2.zip -o build/ne_$1_$2.zip http://naciscdn.org/naturalearth/$1/cultural/ne_$1_$2.zip
  unzip -od build build/ne_$1_$2.zip
  chmod a-x build/ne_$1_$2.*
}

make_world_topo() {
  echo "-----------------------------------------------------------------------"
  echo "Building world topology -- $1"
  echo "-----------------------------------------------------------------------"
  echo

  geo2topo -q 1e5 -n countries=<( \
    shp2json -n build/ne_$2_$3.shp \
    | ndjson-map 'd.id = d.properties.iso_A2, d' \
    | geostitch -n) \
    | topomerge land=countries \
    | toposimplify -S $4 \
    > $1
}

make_state_topo() {
  echo "-----------------------------------------------------------------------"
  echo "Building state / province topology -- topo/countries"
  echo "-----------------------------------------------------------------------"
  echo

  geo2topo -q 1e5 -n adminRegions=<( \
    shp2json -n build/ne_$2_$3.shp \
    | ndjson-map 'p = "properties", dp = d[p], d.id = ""+dp.gn_id, d[p] = { name: dp.name, iso: dp.adm0_a3, level: dp.gn_level }, d' \
    | geostitch -n) \
    | toposimplify -S $4 \
    > $1
}

link_country_geonames() {
  echo "-----------------------------------------------------------------------"
  echo "Linking country metadata to geonames records -- $1"
  echo "-----------------------------------------------------------------------"
  echo

  TOPO_FILE="$1" \
  COUNTRY_META="meta/countries.json" \
  LOG_LEVEL=$2 \
  node scripts/link_country_geonames.js
}

create_country_topologies() {
  echo "-----------------------------------------------------------------------"
  echo "Breaking admin region topologies into country-specific files"
  echo "-----------------------------------------------------------------------"
  echo

  TOPO_FILE="$1" \
  COUNTRY_META="meta/countries.json" \
  LOG_LEVEL=$2 \
  node scripts/split_country_topologies.js
}

world() {
  local topofile=topo/world/$1.json
  fetch_natural_earth_data $1 $2
  make_world_topo $topofile $1 $2 $3
  link_country_geonames $topofile $4
}

states() {
  local topofile=topo/countries/all_$1.json
  fetch_natural_earth_data $1 $2
  make_state_topo $topofile $1 $2 $3
  create_country_topologies $topofile $4
}

rm -rvf topo

mkdir -p build
mkdir -p topo/world
mkdir -p topo/countries

world 110m admin_0_map_units 1.0 BUILD
world 50m admin_0_map_units 0.35 BUILD
world 10m admin_0_map_units 0.25 DEBUG

states 10m admin_1_states_provinces 0.25 DEBUG
